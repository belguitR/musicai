{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\errmi\\\\Desktop\\\\musicai\\\\musicai\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport Player from \"./Player\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport Playlist from \"./Playlist\"; // Import Playlist component\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"8b945ef10ea24755b83ac50cede405a0\"\n});\nexport default function Dashboard({\n  code\n}) {\n  _s();\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [playlists, setPlaylists] = useState([]);\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n  }\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n\n    // Fetch user playlists\n    spotifyApi.getUserPlaylists().then(res => {\n      setPlaylists(res.body.items.map(playlist => ({\n        id: playlist.id,\n        name: playlist.name,\n        images: playlist.images\n      })));\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), playlists.length > 0 ? playlists.map(playlist => {\n        var _playlist$images$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_playlist$images$ = playlist.images[0]) === null || _playlist$images$ === void 0 ? void 0 : _playlist$images$.url,\n            alt: playlist.name,\n            style: {\n              height: \"64px\",\n              width: \"64px\",\n              borderRadius: \"50%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-3\",\n            children: playlist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, playlist.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No playlists found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"zcfaZuI03aeoS+rGcTRjJHyFesE=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","useAuth","Player","TrackSearchResult","Playlist","Container","Form","SpotifyWebApi","jsxDEV","_jsxDEV","spotifyApi","clientId","Dashboard","code","_s","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","playlists","setPlaylists","chooseTrack","track","setAccessToken","getUserPlaylists","then","res","body","items","map","playlist","id","name","images","cancel","searchTracks","tracks","smallestAlbumImage","album","reduce","smallest","image","height","artist","artists","title","uri","albumUrl","url","className","style","children","Control","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","overflowY","length","_playlist$images$","src","alt","width","borderRadius","trackUri","_c","$RefreshReg$"],"sources":["C:/Users/errmi/Desktop/musicai/musicai/src/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport useAuth from \"./useAuth\";\r\nimport Player from \"./Player\";\r\nimport TrackSearchResult from \"./TrackSearchResult\";\r\nimport Playlist from \"./Playlist\";  // Import Playlist component\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: \"8b945ef10ea24755b83ac50cede405a0\",\r\n});\r\n\r\nexport default function Dashboard({ code }) {\r\n  const accessToken = useAuth(code);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [playingTrack, setPlayingTrack] = useState();\r\n  const [playlists, setPlaylists] = useState([]);\r\n\r\n  function chooseTrack(track) {\r\n    setPlayingTrack(track);\r\n    setSearch(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.setAccessToken(accessToken);\r\n\r\n    // Fetch user playlists\r\n    spotifyApi.getUserPlaylists().then(res => {\r\n      setPlaylists(\r\n        res.body.items.map(playlist => ({\r\n          id: playlist.id,\r\n          name: playlist.name,\r\n          images: playlist.images,\r\n        }))\r\n      );\r\n    });\r\n  }, [accessToken]);\r\n\r\n  useEffect(() => {\r\n    if (!search) return setSearchResults([]);\r\n    if (!accessToken) return;\r\n\r\n    let cancel = false;\r\n    spotifyApi.searchTracks(search).then(res => {\r\n      if (cancel) return;\r\n      setSearchResults(\r\n        res.body.tracks.items.map(track => {\r\n          const smallestAlbumImage = track.album.images.reduce(\r\n            (smallest, image) => {\r\n              if (image.height < smallest.height) return image;\r\n              return smallest;\r\n            },\r\n            track.album.images[0]\r\n          );\r\n\r\n          return {\r\n            artist: track.artists[0].name,\r\n            title: track.name,\r\n            uri: track.uri,\r\n            albumUrl: smallestAlbumImage.url,\r\n          };\r\n        })\r\n      );\r\n    });\r\n\r\n    return () => (cancel = true);\r\n  }, [search, accessToken]);\r\n\r\n  return (\r\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\r\n      <Form.Control\r\n        type=\"search\"\r\n        placeholder=\"Search Songs/Artists\"\r\n        value={search}\r\n        onChange={e => setSearch(e.target.value)}\r\n      />\r\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n        {searchResults.map(track => (\r\n          <TrackSearchResult\r\n            track={track}\r\n            key={track.uri}\r\n            chooseTrack={chooseTrack}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"my-2\">\r\n        <h4>Playlists</h4>\r\n        {playlists.length > 0 ? (\r\n          playlists.map(playlist => (\r\n            <div key={playlist.id} className=\"d-flex align-items-center my-2\">\r\n              <img\r\n                src={playlist.images[0]?.url}\r\n                alt={playlist.name}\r\n                style={{ height: \"64px\", width: \"64px\", borderRadius: \"50%\" }}\r\n              />\r\n              <div className=\"ml-3\">{playlist.name}</div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No playlists found</p>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <Player accessToken={accessToken} trackUri={playingTrack?.uri} />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}