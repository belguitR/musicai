{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\errmi\\\\Desktop\\\\musicai\\\\musicai\\\\src\\\\Player.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  accessToken,\n  trackUri,\n  onEnded\n}) {\n  _s();\n  const [play, setPlay] = useState(false);\n  useEffect(() => {\n    // When trackUri changes, start playing the new track\n    setPlay(true);\n  }, [trackUri]);\n  if (!accessToken) return null;\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    token: accessToken,\n    showSaveIcon: true,\n    callback: state => {\n      if (!state.isPlaying) {\n        setPlay(false);\n        if (state.progressMs === 0 && !state.nextTracks.length) {\n          // Call onEnded only if the track is at the end and there are no next tracks\n          onEnded();\n        }\n      }\n    },\n    play: play,\n    uris: trackUri ? [trackUri] : []\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Player, \"jVhLcXDeOrLi5A95zDr62ndrz9E=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useState","useEffect","SpotifyPlayer","jsxDEV","_jsxDEV","Player","accessToken","trackUri","onEnded","_s","play","setPlay","token","showSaveIcon","callback","state","isPlaying","progressMs","nextTracks","length","uris","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/errmi/Desktop/musicai/musicai/src/Player.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport SpotifyPlayer from 'react-spotify-web-playback';\n\nexport default function Player({ accessToken, trackUri, onEnded }) {\n  const [play, setPlay] = useState(false);\n\n  useEffect(() => {\n    // When trackUri changes, start playing the new track\n    setPlay(true);\n  }, [trackUri]);\n\n  if (!accessToken) return null;\n\n  return (\n    <SpotifyPlayer\n      token={accessToken}\n      showSaveIcon\n      callback={state => {\n        if (!state.isPlaying) {\n          setPlay(false);\n          if (state.progressMs === 0 && !state.nextTracks.length) {\n            // Call onEnded only if the track is at the end and there are no next tracks\n            onEnded();\n          }\n        }\n      }}\n      play={play}\n      uris={trackUri ? [trackUri] : []}\n    />\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,MAAMA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACjE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd;IACAU,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,IAAI,CAACD,WAAW,EAAE,OAAO,IAAI;EAE7B,oBACEF,OAAA,CAACF,aAAa;IACZU,KAAK,EAAEN,WAAY;IACnBO,YAAY;IACZC,QAAQ,EAAEC,KAAK,IAAI;MACjB,IAAI,CAACA,KAAK,CAACC,SAAS,EAAE;QACpBL,OAAO,CAAC,KAAK,CAAC;QACd,IAAII,KAAK,CAACE,UAAU,KAAK,CAAC,IAAI,CAACF,KAAK,CAACG,UAAU,CAACC,MAAM,EAAE;UACtD;UACAX,OAAO,CAAC,CAAC;QACX;MACF;IACF,CAAE;IACFE,IAAI,EAAEA,IAAK;IACXU,IAAI,EAAEb,QAAQ,GAAG,CAACA,QAAQ,CAAC,GAAG;EAAG;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEN;AAACf,EAAA,CA3BuBJ,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}